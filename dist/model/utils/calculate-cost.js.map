{"version":3,"file":"calculate-cost.js","sourceRoot":"","sources":["../../../src/model/utils/calculate-cost.ts"],"names":[],"mappings":"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","sourcesContent":["/** OpenAI API costs in cents per token. */\ntype Cost = { input: number; output: number };\n\nconst COSTS: Record<string, Cost> = {\n  'gpt-4': {\n    input: 0.003,\n    output: 0.006,\n  },\n  'gpt-4-turbo': {\n    input: 0.001,\n    output: 0.003,\n  },\n  'gpt-4-32k': {\n    input: 0.006,\n    output: 0.012,\n  },\n  'gpt-3.5-turbo': {\n    input: 0.00015,\n    output: 0.0002,\n  },\n  'gpt-3.5-turbo-16k': {\n    input: 0.0003,\n    output: 0.0004,\n  },\n  'gpt-3.5-turbo-1106': {\n    input: 0.0001,\n    output: 0.0002,\n  },\n  'gpt-3.5-turbo-instruct': {\n    input: 0.00015,\n    output: 0.0002,\n  },\n  'babbage-002': {\n    input: 0.00004,\n    output: 0.00004,\n  },\n  'davinci-002': {\n    input: 0.0002,\n    output: 0.0002,\n  },\n  'text-embedding-ada-002': {\n    input: 0.00001,\n    output: 0.00001,\n  },\n  'ft:gpt-3.5-turbo': {\n    input: 0.0012,\n    output: 0.0016,\n  },\n  'ft:davinci-002': {\n    input: 0.0012,\n    output: 0.0012,\n  },\n  'ft:babbage-002': {\n    input: 0.00016,\n    output: 0.00016,\n  },\n  'ft-legacy:ada': {\n    input: 0.00016,\n    output: 0.00016,\n  },\n  'ft-legacy:babbage': {\n    input: 0.00024,\n    output: 0.00024,\n  },\n};\n\n/** Calculate the cost (in cents) for the given model and tokens. */\nexport function calculateCost(args: {\n  model: string;\n  tokens?: { prompt_tokens: number; completion_tokens?: number };\n}): number | undefined {\n  const cost = getCost(args.model);\n  if (!cost || !args.tokens) return undefined;\n  const { prompt_tokens: prompt, completion_tokens: completion = 0 } =\n    args.tokens;\n  // Work around floating point errors by multiplying by 1000 and rounding.\n  const MULTIPLIER = 1000;\n  const multipliedCost =\n    cost.input * prompt * MULTIPLIER + cost.output * completion * MULTIPLIER;\n  return Math.round(multipliedCost) / MULTIPLIER;\n}\n\n/** Find the cost for the given model. */\nfunction getCost(model: string): Cost | null {\n  let cost: Cost | undefined = COSTS[model];\n  if (cost) return cost;\n\n  // Handle model names with versions that have the same price.\n  // Eg: gpt-3.5-turbo-0613\n\n  if (model.startsWith('gpt-4')) {\n    if (model.startsWith('gpt-4-1106') || model.includes('turbo')) {\n      return COSTS['gpt-4-turbo'];\n    } else {\n      return COSTS[model.includes('32k') ? 'gpt-4-32k' : 'gpt-4'];\n    }\n  }\n\n  if (model.startsWith('gpt-3.5-turbo')) {\n    return COSTS[model.includes('16k') ? 'gpt-3.5-turbo-16k' : 'gpt-3.5-turbo'];\n  }\n\n  if (model.startsWith('babbage-002')) return COSTS['babbage-002'];\n  if (model.startsWith('davinci-002')) return COSTS['davinci-002'];\n\n  if (model.startsWith('text-embedding-ada-002')) {\n    return COSTS['text-embedding-ada-002'];\n  }\n\n  // V2 fine-tuned models\n  // Eg: ft:gpt-3.5-turbo:my-org:custom_suffix:id\n  if (model.startsWith('ft:davinci')) return COSTS['ft:davinci-002'];\n  if (model.includes('ft:babbage')) return COSTS['ft:babbage-002'];\n  if (model.includes('ft:gpt-3.5-turbo')) return COSTS['ft:gpt-3.5-turbo'];\n\n  // V1 fine-tuned models\n  // Eg: ada:ft-your-org:custom-model-name-2022-02-15-04-21-04\n  if (model.startsWith('ada:ft')) return COSTS['ft-legacy:ada'];\n  if (model.startsWith('babbage:ft')) return COSTS['ft-legacy:babbage'];\n\n  console.warn(`No OpenAI cost found for model \"${model}\"`);\n\n  return null;\n}\n"]}